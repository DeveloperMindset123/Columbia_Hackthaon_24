/// <reference types="react" />
import { WrappableComponent } from './hoc';
export * from "./hooks";
export declare const ScrollIntoView: import("react").ForwardRefExoticComponent<{
    enabled?: boolean | undefined;
    scrollIntoViewKey?: string | number | boolean | undefined;
    animated?: boolean | undefined;
    immediate?: boolean | undefined;
    onMount?: boolean | undefined;
    onUpdate?: boolean | undefined;
    scrollIntoViewOptions?: Partial<import("./config").FullOptions> | undefined;
    scrollIntoViewAPI?: import("./api").ScrollIntoViewAPI | undefined;
    children?: import("react").ReactNode;
} & Partial<import("./config").FullOptions> & import("react-native").ViewProps & import("react").RefAttributes<import("./container").ContainerBase>>;
export declare const wrapScrollView: (comp: WrappableComponent) => import("react").ComponentType<import("react-native").ScrollViewProps & {
    scrollIntoViewOptions?: Partial<import("./config").FullOptions> | undefined;
    scrollEventThrottle?: number | undefined;
    innerRef?: any;
    contentOffset?: number | undefined;
}>;
export declare const wrapScrollViewConfigured: (config?: Partial<import("./config").FullHOCConfig> | undefined) => (comp: WrappableComponent) => import("react").ComponentType<import("react-native").ScrollViewProps & {
    scrollIntoViewOptions?: Partial<import("./config").FullOptions> | undefined;
    scrollEventThrottle?: number | undefined;
    innerRef?: any;
    contentOffset?: number | undefined;
}>;
