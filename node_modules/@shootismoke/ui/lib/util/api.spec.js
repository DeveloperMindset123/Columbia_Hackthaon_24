"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
var api_1 = require("./api");
var testutil_1 = require("./testutil");
describe('round', function () {
    it('should round numbers correctly', function () {
        expect((0, api_1.round)(2)).toBe(2);
        expect((0, api_1.round)(2.3)).toBe(2.3);
        expect((0, api_1.round)(2.32)).toBe(2.3);
        expect((0, api_1.round)(2.99)).toBe(3);
    });
});
describe('createApi', function () {
    var testCases = [
        __assign(__assign({}, testutil_1.testCases[0]), { expected: {
                dailyCigarettes: 3.8454545454545452,
                distanceToStation: 12665,
                isAccurate: false
            }, gps: { latitude: 339.9289, longitude: 116.3883 } }),
        __assign(__assign({}, testutil_1.testCases[1]), { expected: {
                dailyCigarettes: 0.009090909090909092,
                distanceToStation: 12200,
                isAccurate: false
            }, gps: { latitude: 339.9289, longitude: 116.3883 } }),
    ];
    it('should work with testCases', function () {
        testCases.forEach(function (tc) {
            var api = (0, api_1.createApi)(tc.gps, tc.results, new Date(tc.date));
            expect(api.shootismoke).toMatchObject(tc.expected);
        });
    });
});
