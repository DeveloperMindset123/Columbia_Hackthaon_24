import { LatLng, OpenAQResult } from '@shootismoke/dataproviders';
/**
 * Capitalize a string.
 *
 * @param s - The string to capitalize
 */
export declare function capitalize(s: string): string;
/**
 * We can show distances in these two units.
 */
export declare type DistanceUnit = 'km' | 'mile';
/**
 * Above this distance (km), we consider the station too far from the user
 */
export declare const MAX_DISTANCE_TO_STATION: number;
/**
 * Station given by the AQICN API is fucked up. Sometimes it's [lat, lng],
 * sometimes it's [lng, lat].
 * We check here with the user's real currentLocation coordinates, and take the
 * "closest" one.
 *
 * @param currentLocation - An object containing {latitude, longitude}
 * representing the user's current location.
 * @param station - An object containing {latitude, longitude} representing
 * the station's location.
 */
export declare function getCorrectLatLng(currentLocation: LatLng, station: LatLng): LatLng;
/**
 * Get distance from current location to station.
 *
 * @param currentLocation - The current location of the user.
 * @param api - The api object returned by remote data.
 * @param unit - The unit of measure returned.
 */
export declare function distanceToStation(currentLocation: LatLng, pm25Measurement: OpenAQResult, unit?: DistanceUnit): number;
/**
 * Returns true if the station is at more than {@link MAX_DISTANCE_TO_STATION}
 * kilometers away from the current location.
 *
 * @param currentLocation - The current location of the user.
 * @param api - The api object returned by remote data.
 */
export declare function isStationTooFar(currentLocation: LatLng, pm25Measurement: OpenAQResult): boolean;
